<?php

	function MostViewed($array, $arrayLength, $element2find){

		// Sort the list for binary search algorithm to work
		// QuickSort($array);		

		// Find 1st and last indexes to calculate how many there are
		$firstElement = BinarySearchCount($array,$arrayLength,$element2find,'First');

		// check if element exist in first place
		if ($firstElement==-1){return $output = 0;}

		// find the last index to calculate how many of those elements
		else{
			$lastElement = BinarySearchCount($array,$arrayLength,$element2find,'Last');

			// use first and last to know the count of that element
			$output = $lastElement - $firstElement + 1;
			return $output;
		}

	}

  //NEED TO COMPLETE
	private function QuickSort(){
		return 0;
	}

	function BinarySearchCount($list, $lenghtList, $item2find,$variation){

		//Default values of indexes 
		$lowerIndex = 0;
		$upperIndex = $lenghtList-1;
		$middleIndex = ($lowerIndex + $upperIndex)/2;
		$item2find_index = -1;

		while ( $lowerIndex <= $upperIndex) {

			//Compare the middle value with the item in question
			if ($list[$middleIndex] == $item2find) {
				

				$item2find_index = $middleIndex;

				// Variation to find the first occurence
				if ($variation=='First') {
					$upperIndex = $middleIndex-1;					
				}

				// Variation to find the last occurence
				elseif ($variation=='Last') {
					$upperIndex = $middleIndex+1;					
				}

			// look only at left half of list
			} elseif ($item2find<$list[$middleIndex]){
				$upperIndex = $middleIndex-1;

			// look only at right half of list
			} else{
				$lowerIndex = $middleIndex+1;
			}

			return $item2find_index;

		} // End of while

	} //End Private Function BinarySearchCount
